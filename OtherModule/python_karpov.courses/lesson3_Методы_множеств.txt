1. add(element) — добавляет элемент в множество.

fruits = {"apple", "banana", "cherry"}
fruits.add("orange")
print(fruits)  # выведет {'banana', 'cherry', 'orange', 'apple'}

2. union() — объединяет два множества

a = {1, 2, 3}
b = {3, 4, 5}

c = a.union(b)
print(c)  # {1, 2, 3, 4, 5}

3. clear() — удаляет все элементы из множества.

fruits = {"apple", "banana", "cherry"}
fruits.clear()
print(fruits)  # выведет set()

4. copy() — создает копию множества.

fruits = {"apple", "banana", "cherry"}
new_fruits = fruits.copy()
print(new_fruits)  # выведет {'banana', 'cherry', 'apple'}

5. difference() — возвращает разность между двумя множествами.

set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}
diff_set1_set2 = set1.difference(set2)
print(diff_set1_set2)  # выведет {1, 2, 3}

6. discard(element) — удаляет элемент из множества, если он присутствует. Если элемент отсутствует, то никаких ошибок не возникает. Просто ничего не происходит.

fruits = {"apple", "banana", "cherry"}
fruits.discard("banana")
print(fruits)  # выведет {'cherry', 'apple'}

fruits = {"apple", "banana", "cherry"}
fruits.discard("aaaaaaaa")
print(fruits)  # выведет {'cherry', 'banana', 'apple'}

7. remove(element) - Этот метод удаляет элемент из множества, если он присутствует. Если элемент отсутствует, то вызывается ошибка KeyError. 

my_set = {1, 2, 3}
my_set.remove(2)
print(my_set)  # Output: {1, 3}
my_set.remove(5)  # Вызовет ошибку KeyError, так как элемент 5 отсутствует

8. intersection() — возвращает пересечение двух множеств.

set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}
intersection_set = set1.intersection(set2)
print(intersection_set)  # выведет {4, 5}

9. isdisjoint() — возвращает True, если два множества не имеют общих элементов.

set1 = {1, 2, 3}
set2 = {4, 5, 6}
disjoint_sets = set1.isdisjoint(set2)
print(disjoint_sets)  # выведет True

10. issubset() — возвращает True, если одно множество является подмножеством друг

set1 = {1, 2, 3, 4, 5}
set2 = {1, 2, 3}

result = set2.issubset(set1)
print(result) # выведет True
